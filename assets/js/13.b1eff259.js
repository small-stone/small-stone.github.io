(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{410:function(t,v,_){"use strict";_.r(v);var P=_(56),r=Object(P.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"tcp-ip"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-ip"}},[t._v("#")]),t._v(" TCP/IP")]),t._v(" "),_("p",[t._v("互联网，实际上是一套理念和协议组成的体系架构。互联网中的数据是通过数据包来传输的。如果发送的数据很大，那么该数据就会被拆分为很多小数据包来传输。")]),t._v(" "),_("h2",{attrs:{id:"ip-把数据包送达目的主机"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#ip-把数据包送达目的主机"}},[t._v("#")]),t._v(" IP：把数据包送达目的主机")]),t._v(" "),_("p",[t._v("数据包要在互联网上进行传输，就要符合网际协议（Internet Protocol，简称 IP）标准。互联网上不同的在线设备都有唯一的地址，地址只是一个数字，这和大部分家庭收件地址类似，你只需要知道一个家庭的具体地址，就可以往这个地址发送包裹，这样物流系统就能把物品送到目的地。")]),t._v(" "),_("p",[_("strong",[t._v("计算机的地址就称为 IP 地址，访问任何网站实际上只是你的计算机向另外一台计算机请求信息。")])]),t._v(" "),_("p",[t._v("如果要想把一个数据包从主机 A 发送给主机 B，那么在传输之前，数据包上会被附加上主机 B 的 IP 地址信息，这样在传输过程中才能正确寻址。额外地，数据包上还会附加上主机 A 本身的 IP 地址，有了这些信息主机 B 才可以回复信息给主机 A。这些附加的信息会被装进一个叫 IP 头的数据结构里。IP 头是 IP 数据包开头的信息，包含 IP 版本、源 IP 地址、目标 IP 地址、生存时间等信息。")]),t._v(" "),_("h2",{attrs:{id:"udp-把数据包送达应用程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#udp-把数据包送达应用程序"}},[t._v("#")]),t._v(" UDP：把数据包送达应用程序")]),t._v(" "),_("p",[t._v("IP 是非常底层的协议，只负责把数据包传送到对方电脑，但是对方电脑并不知道把数据包交给哪个程序，是交给浏览器还是交给王者荣耀？因此，需要基于 IP 之上开发能和应用打交道的协议，最常见的是“"),_("strong",[t._v("用户数据包协议（User Datagram Protocol）")]),t._v("”，简称 UDP。")]),t._v(" "),_("p",[t._v("UDP 中一个最重要的信息是端口号，端口号其实就是一个数字，每个想访问网络的程序都需要绑定一个端口号。通过端口号 UDP 就能把指定的数据包发送给指定的程序了，所以 IP 通过 IP 地址信息把数据包发送给指定的电脑，而 UDP 通过端口号把数据包分发给正确的程序。和 IP 头一样，端口号会被装进 UDP 头里面，UDP 头再和原始数据包合并组成新的 UDP 数据包。UDP 头中除了目的端口，还有源端口号等信息。")]),t._v(" "),_("p",[t._v("在使用 UDP 发送数据时，有各种因素会导致数据包出错，虽然 UDP 可以校验数据是否正确，但是对于错误的数据包，"),_("strong",[t._v("UDP 并不提供重发机制，只是丢弃当前的包")]),t._v("，而且 UDP 在发送之后也无法知道是否能达到目的地。")]),t._v(" "),_("p",[t._v("虽说 UDP "),_("strong",[t._v("不能保证数据可靠性，但是传输速度却非常快")]),t._v("，所以 UDP 会应用在一些关注速度、但不那么严格要求数据完整性的领域，如在线视频、互动游戏等。")]),t._v(" "),_("h2",{attrs:{id:"tcp-把数据完整地送达应用程序"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-把数据完整地送达应用程序"}},[t._v("#")]),t._v(" TCP：把数据完整地送达应用程序")]),t._v(" "),_("p",[t._v("对于浏览器请求，或者邮件这类要求数据传输可靠性（reliability）的应用，如果使用 UDP 来传输会存在两个问题：")]),t._v(" "),_("ul",[_("li",[t._v("数据包在传输过程中容易丢失；")]),t._v(" "),_("li",[t._v("大文件会被拆分成很多小的数据包来传输，这些小的数据包会经过不同的路由，并在不同的时间到达接收端，而 UDP 协议并不知道如何组装这些数据包，从而把这些数据包还原成完整的文件。")])]),t._v(" "),_("p",[t._v("基于这两个问题，我们引入 TCP 了。TCP（Transmission Control Protocol，传输控制协议）是一种"),_("strong",[t._v("面向连接的、可靠的、基于字节流的传输层通信协议")]),t._v("。相对于 UDP，TCP 有下面两个特点:")]),t._v(" "),_("ul",[_("li",[t._v("对于数据包丢失的情况，TCP 提供重传机制；")]),t._v(" "),_("li",[t._v("TCP 引入了数据包排序机制，用来保证把乱序的数据包组合成一个完整的文件。")])]),t._v(" "),_("p",[t._v("TCP 单个数据包的传输流程和 UDP 流程差不多，不同的地方在于，通过 TCP 头的信息保证了一块大的数据传输的完整性。一个完整的 TCP 连接的生命周期包括了“建立连接”“传输数据”和“断开连接”三个阶段。 "),_("img",{attrs:{src:"https://static001.geekbang.org/resource/image/44/44/440ee50de56edc27c6b3c992b3a25844.png",alt:""}})]),t._v(" "),_("ul",[_("li",[t._v("首先，建立连接阶段。这个阶段是通过“三次握手”来建立客户端和服务器之间的连接。TCP 提供面向连接的通信传输。面向连接是指在数据通信开始之前先做好两端之间的准备工作。所谓三次握手，是指在建立一个 TCP 连接时，客户端和服务器总共要发送三个数据包以确认连接的建立。")]),t._v(" "),_("li",[t._v("其次，传输数据阶段。在该阶段，接收端需要对每个数据包进行确认操作，也就是接收端在接收到数据包之后，需要发送确认数据包给发送端。所以当发送端发送了一个数据包之后，在规定时间内没有接收到接收端反馈的确认消息，则判断为数据包丢失，并触发发送端的重发机制。同样，一个大的文件在传输过程中会被拆分成很多小的数据包，这些数据包到达接收端后，接收端会按照 TCP 头中的序号为其排序，从而保证组成完整的数据。")]),t._v(" "),_("li",[t._v("最后，断开连接阶段。数据传输完毕之后，就要终止连接了，涉及到最后一个阶段“四次挥手”来保证双方都能断开连接。")])])])}),[],!1,null,null,null);v.default=r.exports}}]);